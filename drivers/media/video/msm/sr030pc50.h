#ifndef _SR030PC50_REGS_H_
#define _SR030PC50_REGS_H_

#ifdef FACTORY_TEST
extern struct class *camera_class;
#endif

static const u16 sr030pc50_init_reg[] =
{
0x0171,	// reset op.
0x0173,
0x0171,

// PLL Setting 20120327 final  
0x0300,

0x080f, //Parallel NO Output_PAD Out
0x1000,
0x1190,
0x1200,
0x1488,

0xc095,
0xc118,
0xc291,
0xc300,
0xc401,

0x0320, //page 20
0x101c, //ae off
0x0322, //page 22
0x107b, //awb off

0x0300,
0x1200,
0x2000,
0x2104,
0x2200,
0x2304,

0x4000, //Hblank 144
0x4190, 
0x4200, //Vblank 104
0x4368, 

//BLC
0x802e, //don't touch
0x817e, //don't touch
0x8290, //don't touch
0x8330, //don't touch
0x842c, //don't touch
0x854b, //don't touch
0x8601, //don't touch
0x8847, //don't touch

0x900c, //BLC_TIME_TH_ON
0x910c, //BLC_TIME_TH_OFF
0x9288, //BLC_AG_TH_ON
0x9388, //BLC_AG_TH_OFF

0x9838, //don't touch
0x9940, //Out BLC
0xa040, //Dark BLC
0xa844, //Normal BLC

//Page 2  Last Update 10_03_12
0x0302,
0x1000,
0x1100,
0x1340,
0x1404,
0x181c,
0x1900, //01
0x1a00,
0x1b08,
0x1c9c,
0x1d03,
0x2033,
0x2177,
0x22a7,
0x2332,
0x2433,
0x2b40,
0x2d32,
0x3199,
0x3200,
0x3300,
0x343c,
0x350d,
0x3b60, //80

//timing control 1 // //don't touch
0x5021,
0x511c,
0x52aa,
0x535a,
0x5430,
0x5510,
0x560c,
0x5800,
0x590f,

//timing control 2 // //don't touch
0x6034,
0x613a,
0x6234,
0x6339,
0x6434,
0x6539,
0x7235,
0x7338,
0x7435,
0x7538,
0x8002,
0x812e,
0x820d,
0x8310,
0x840d,
0x8510,
0x921d,
0x9320,
0x941d,
0x9520,
0xa003,
0xa12d,
0xa42d,
0xa503,
0xa812,
0xa91b,
0xaa22,
0xab2b,
0xac10,
0xad0e,
0xb833,
0xb935,
0xbc0c,
0xbd0e,
0xc03a,
0xc13f,
0xc23a,
0xc33f,
0xc43a,
0xc53e,
0xc63a,
0xc73e,
0xc83a,
0xc93e,
0xca3a,
0xcb3e,
0xcc3b,
0xcd3d,
0xce3b,
0xcf3d,
0xd033,
0xd13f,

//Page 10
0x0310,
0x1003, //03, //ISPCTL1, YUV ORDER(FIX)
0x1143,
0x1230, //Y offet, dy offseet enable
0x4080,
0x4102, //00 DYOFS  00->10  _100318
0x4885, //Contrast  88->84  _100318
0x5048, //AGBRT

0x6001, //7f //7c
0x6100, //Use default
0x6280, //SATB  (1.4x)
0x6380, //SATR  (1.2x)
0x6448, //AGSAT
0x6690, //wht_th2
0x6736, //wht_gain  Dark (0.4x), Normal (0.75x)

0x8000,
//Page 11
//LPF
0x0311,
0x1025,
0x1107,
0x2000,
0x2160,
0x230a,
0x6013,
0x6185,
0x6200,
0x6300,
0x6400,

0x6770,
0x6824,
0x6904,

//Page 12
//2D
0x0312,
0x40d3,
0x4109,
0x5018,
0x5124,
0x701f,
0x7100,
0x7200,
0x7300,
0x7412,
0x7512,
0x7620,
0x7780,
0x7888,
0x7918,

///////////////////////
0x903d,
0x9134,
0x9928,
0x9c05, //14 For defect
0x9d08, //15 For defect
0x9e28,
0x9f28,

0xb07d, //75 White Defect
0xb544,
0xb682,
0xb752,
0xb844,
0xb915,
///////////////////////

//Edge
0x0313,
0x1001,	
0x1189,	
0x1214,	
0x1319,	
0x1408,
0x2003,
0x2104,
0x2325,
0x2421,
0x2508,
0x2640,
0x2700,
0x2808,
0x2950,
0x2ae0,
0x2b10,
0x2c28,
0x2d40,
0x2e00,
0x2f00,
0x3011,
0x8005,
0x8107,
0x9004,
0x9105,
0x9200,
0x9330,
0x9430,
0x9510,

//14page LSC 20120214 수정//////////
0x0314,
0x1001,

0x2244, //69,76, 34, 2b
0x2334, //50,4b, 15, 0d
0x2432, //44,3b, 10, 0b

0x2780, /* RXCEN */
0x2880, //RYCEN
0x2980, /* GXCEN */
0x2a80, //GYCEN
0x2b80, /* BXCEN */
0x2c80, //BYCEN


//15page//////////////////////////
0x0315, 
0x1003,

0x1452,
0x163a,
0x172f,

//CMC
0x30f1,
0x3171,
0x3200,
0x331f,
0x34e1,
0x3542,
0x3601,
0x3731,
0x3872,

//CMC OFS
0x4090,
0x4182,
0x4212,
0x4386,
0x4492,
0x4518,
0x4684,
0x4702,
0x4802,

0x0316,
0x3000,
0x310d,
0x321b,
0x332d,
0x344e,
0x356f,
0x3686,
0x379d,
0x38af,
0x39c0,
0x3acf,
0x3be2,
0x3cf0,
0x3df9,
0x3eff,

//Page 17 AE 
0x0317,
0xc43c,
0xc532,

//Page 20 AE 
0x0320,
0x101c,
0x1104,

0x2001,
0x2827,
0x29a1,

0x2af0,
0x2bf4,
0x2c2b, //23->2b 2010_04_06 hhzin

0x30f8,

0x3b22,
0x3cde,

0x3922,
0x3ade,
0x3b22, //23->22 _10_04_06 hhzin
0x3cde,

0x6071, //d5, 99
0x6100,

0x6271,
0x6300,

0x6830,
0x696a,
0x6A27,
0x6Bbb,

0x7034,//Y Targe 32

0x7611, //Unlock bnd1
0x7772, //Unlock bnd2 02->a2 _10_04_06 hhzin

0x7812, //Yth 1
0x7926, //Yth 2 26->27 _10_04_06 hhzin
0x7a23, //Yth 3

0x7c17, //1c->1d _10_04_06 hhzin
0x7d22,

0x8300, //EXP Normal 33.33 fps 
0x84af, 
0x85c8, 

0x8600, //EXPMin 7500.00 fps
0x87c8, 

0xa002, //EXP Max 8.33 fps 
0xa1bf, 
0xa220,

0x8B3a, //EXP100 
0x8C98, 
0x8D30, //EXP120 
0x8Ed4, 

0x988C,
0x9923,

0x9c07, //EXP Limit 833.33 fps
0x9d08,
0x9e00, //EXP Unit
0x9fc8,

0xb01d,
0xb114,
0xb290,
0xb317,
0xb417,
0xb53e,
0xb62b,
0xb724,
0xb821,
0xb91f,
0xba1e,
0xbb1d,
0xbc1c,
0xbd1b,

0xc01a,
0xc348,
0xc448,

//Page 22 AWB
0x0322,
0x10e2,
0x112e,
0x2041,
0x2140,
0x24fe,

0x3080,
0x3180, //7f
0x3812,
0x3933,
0x40f3, //f0
0x4154,
0x4233,
0x43f3,
0x4444,
0x4566,
0x4608,
0x4763,

0x803d,
0x8120,
0x8240,

0x835a, //RMAX 5a
0x8422, //RMIN 23
0x8556, //BMAX 5a
0x8624, //BMIN 

0x8748, //42
0x883a,
0x893e,
0x8a34,

0x8b00, //OUT TH
0x8d24, //21
0x8e61, //41

0x8f63,
0x9062, //60 //62
0x915e, //5c //5e
0x925a, //
0x9350,//52 //50
0x9442,//48 //46
0x953b, //36 //3c
0x9634, //31 //31
0x972d,
0x982b,
0x9929, //29
0x9a27,
0x9b0b,
0xb4bf,
    
///////////////////////////// Page 48	- MIPI		////
0x0348,

0x1005,
0x1100,    
0x1200,
	    
0x16c4,
0x1700,
0x1900,
0x1a06,
0x1c02,
0x1d04,
0x1e07,
0x1f04,
0x2000,
0x21b8,
0x2200,
0x2301,

0x3005,
0x3100,
0x3206,
0x3401,
0x3502,
0x3601,
0x3703,
0x3800,
0x394a,
0x3c00,
0x3dfa,
0x3f10,
0x4000,
0x4120,
0x4200,

//  0x5081,

0x0322,
0x10fb,

0x0320,
0x109c,

0x0170,

};

static const u16 sr030pc50_VT_init_reg[] =
{
0x0171,	// reset op.
0x0173,
0x0171,

// PLL Setting
0x0300,

0x080f, //Parallel NO Output_PAD Out
0x1000,	// VDOCTL1
0x1190,	// VDOCTL2 , 90 : FFR off, 94 : FFR on
0x1200,	// CLK_CTL
0x1488,

0xc095,
0xc118,
0xc291,
0xc300,
0xc401,

0x0320, /*page 20*/
0x101c, /*ae off*/
0x0322, /*page 22*/
0x107b, /*awb off*/
0x0300,
0x1200,
0x2000,
0x2104,
0x2200,
0x2304,

0x4000, //Hblank 144
0x4190,
0x4200, //Vblank 20
0x4314,

//BLC
0x802e, //don't touch
0x817e, //don't touch
0x8290, //don't touch
0x8330, //don't touch
0x842c, //don't touch
0x854b, //don't touch
0x8601, //don't touch
0x8847, //don't touch
//{0x89, 0x48},//BLC hold

0x9006,//TIME_IN  12/100  _100318
0x9106,//TIME_OUT 12/100  _100318
0x9298,//AG_IN
0x9398,//AG_OUT

0x9838, //don't touch
0x9940, //Out BLC
0xa040, //Dark BLC
0xa842, //Normal BLC 44

//Page2 Last Update 12_01_20
0x0302,
0x1000,
0x1100,
0x1340,
0x1404,
0x181c,
0x1900, //01
0x1a00,
0x1b08,
0x1c9c,
0x1d03,
0x2033,
0x2177,
0x22a7,
0x2332,
0x2433,
0x2b40,
0x2d32,
0x3199,
0x3200,
0x3300,
0x343c,
0x350d,
0x3b60, //80

//timing control 1 // //don't touch
0x5021,
0x511c,
0x52aa,
0x535a,
0x5430,
0x5510,
0x560c,
0x5800,
0x590f,

//timing control 2 // //don't touch
0x6034,
0x613a,
0x6234,
0x6339,
0x6434,
0x6539,
0x7235,
0x7338,
0x7435,
0x7538,
0x8002,
0x812e,
0x820d,
0x8310,
0x840d,
0x8510,
0x921d,
0x9320,
0x941d,
0x9520,
0xa003,
0xa12d,
0xa42d,
0xa503,
0xa812,
0xa91b,
0xaa22,
0xab2b,
0xac10,
0xad0e,
0xb833,
0xb935,
0xbc0c,
0xbd0e,
0xc03a,
0xc13f,
0xc23a,
0xc33f,
0xc43a,
0xc53e,
0xc63a,
0xc73e,
0xc83a,
0xc93e,
0xca3a,
0xcb3e,
0xcc3b,
0xcd3d,
0xce3b,
0xcf3d,
0xd033,
0xd13f,

//Page 10
0x0310,
0x1003, //03, //ISPCTL1, YUV ORDER(FIX)
0x1143,
0x1230, //Y offet, dy offseet enable
0x4080,
0x4102, //00 DYOFS  00->10  _100318
0x4880, //Contrast  88->84  _100318
0x5048, //AGBRT

0x6001, //7f //7c
0x6100, //Use default
0x6278, //SATB_B  (1.4x)
0x6378, //SATR_R  (1.2x) //78
0x6448, //AGSAT
0x6690, //wht_th2
0x6736, //wht_gain  Dark (0.4x), Normal (0.75x)

0x8000,

//Page 11
//LPF
0x0311,
0x1025,	//LPF_CTL1 //0x01
0x1107,	//06
0x2000,	//LPF_AUTO_CTL
0x2160,	//LPF_PGA_TH
0x230a,	//LPF_TIME_TH
0x6013,	//ZARA_SIGMA_TH //40->10
0x6185,
0x6200,	//ZARA_HLVL_CTL
0x6300,	//ZARA_LLVL_CTL
0x6400,	//ZARA_DY_CTL

0x6770,	//Dark //f0
0x6824,	//Middle //04 //34
0x6904,	//High //04

//Page 12
//2D
0x0312,
0x40d3,	//YC2D_LPF_CTL1 //bc
0x4109,	//YC2D_LPF_CTL2
0x5018,	//Test Setting
0x5124,	//Test Setting
0x701f,	//GBGR_CTL1 //0x1f
0x7100,	//Test Setting
0x7200,	//Test Setting
0x7300,	//Test Setting
0x7412,	//GBGR_G_UNIT_TH//12
0x7512,	//GBGR_RB_UNIT_TH//12
0x7620,	//GBGR_EDGE_TH
0x7780,	//GBGR_HLVL_TH
0x7888,	//GBGR_HLVL_COMP
0x7918,	//Test Setting

//////////////////
0x903d,
0x9134,
0x9928,
0x9c05, //14 For defect
0x9d08, //15 For defect
0x9e28,
0x9f28,

0xb07d, //75 White Defect
0xb544,
0xb682,
0xb752,
0xb844,
0xb915,
///////////////////////

//Edge
0x0313,
0x1001,
0x1189,
0x1214,
0x1319,
0x1408,	//Test Setting
0x2003,	//SHARP_Negative
0x2104,	//SHARP_Positive
0x2325,	//SHARP_DY_CTL
0x2421,	//40->33
0x2508,	//SHARP_PGA_TH
0x2640,	//Test Setting
0x2700,	//Test Setting
0x2808,	//Test Setting
0x2950,	//AG_TH
0x2ae0,	//region ratio
0x2b10,	//Test Setting
0x2c28,	//Test Setting
0x2d40,	//Test Setting
0x2e00,	//Test Setting
0x2f00,	//Test Setting
0x3011,	//Test Setting
0x8005,	//SHARP2D_CTL
0x8107,	//Test Setting
0x9004,	//SHARP2D_SLOPE
0x9105,	//SHARP2D_DIFF_CTL
0x9200,	//SHARP2D_HI_CLIP
0x9330,	//SHARP2D_DY_CTL
0x9430,	//Test Setting
0x9510,	//Test Setting

//14page LSC 20120214 수정//////////
0x0314,
0x1001,

0x2244, //69,76, 34, 2b
0x2334, //50,4b, 15, 0d
0x2432, //44,3b, 10, 0b

0x2780, /* RXCEN */
0x2880, //RYCEN
0x2980, /* GXCEN */
0x2a80, //GYCEN
0x2b80, /* BXCEN */
0x2c80, //BYCEN


//15page//////////////////////////
0x0315,
0x1003,

0x1448,	//CMCOFSGM
0x163e,	//CMCOFSGL
0x172d,	//CMC SIGN

//CMC
0x30cb,
0x314b,
0x3200,
0x3323,
0x34ce,
0x352b,
0x3600,
0x3735,
0x3875,


//CMC OFS
0x4000,
0x4100,
0x4200,
0x430e,
0x448b,
0x4583,
0x4600,
0x4700,
0x4800,

0x0316,//gamma   0.44 //S_32
0x3000,
0x3108,//0x0d //0e
0x321c,//(0216_kjh_0x1b-->1c) 0x18 //1a
0x332f,//0x2c //2f
0x3453,
0x3576,
0x3693,
0x37ac,
0x38c0,
0x39d0,
0x3adc,
0x3bed,
0x3cf4, //f7
0x3df6, //fc
0x3efa, //ff

//Page 17 AE
0x0317,
0xc43c,
0xc532,

//Page 20 AE
0x0320,
0x101c,
0x1104,

0x2001,
0x2827,
0x29a1,

0x2a90,
0x2bf5,
0x2c2b, //23->2b 2010_04_06 hhzin

0x30f8,

0x3b22,
0x3cde,

0x3922,
0x3ade,
0x3b22, //23->22 _10_04_06 hhzin
0x3cde,

0x6070, //70
0x6112, //11 //22

0x6270,
0x6320, //11 //22

0x683c,
0x6964,
0x6A28,
0x6Bc8,

0x7034,//Y Targe 32

0x7611, //Unlock bnd1
0x7772, //Unlock bnd2 02->a2 _10_04_06 hhzin

0x7812, //Yth 1
0x7926, //Yth 2 //1f
0x7a23, //Yth 3

0x7c17, //1c->1d _10_04_06 hhzin
0x7d22,

//50Hz
0x8300, //EXP Normal 33.33 fps
0x84af,
0x85c8,

0x8600, //EXPMin 7500.00 fps
0x87c8,

0xa001, //EXP Max 16.67 fps
0xa15f,
0xa290,

0x8B3a, //EXP100
0x8C98,
0x8D30, //EXP120
0x8Ed4,

0x9101, //EXP Fix 15.00 fps
0x9286,
0x93a0,

0x988C, //Outdoor th1
0x9923, //Outdoor th2

0x9c07, //EXP Limit 833.33 fps
0x9d08,
0x9e00, //EXP Unit
0x9fc8,

0xb01d,
0xb114, //14
0xb2a0, //80 //90
0xb317, //AGLVL //17
0xb417,
0xb53e,
0xb62b,
0xb724,
0xb821,
0xb91f,
0xba1e,
0xbb1d,
0xbc1c,
0xbd1b,

0xc01a,
0xc348,
0xc448,

//Page 22 AWB
0x0322,
0x10e2,
0x112e, //2e
0x2041, //01 //69
0x2140,

0x3080, //Cb
0x3180, //Cr
0x3812, //Lock Boundary //13
0x3933,
0x40f3, //f0
0x4133, //32
0x4222,
0x43f3,
0x4488, //
0x4566, //
0x4608, //02

0x803d, //3a //3c
0x8120,
0x8240, //3a

//Cb_7b, Cr_85 한도
0x835a, //RMAX
0x8422, //(0216_kjh20>>23) RMIN
0x8556, //(0216_kjh5c>>5a) BMAX //51
0x8624, //BMIN //20

0x874a,
0x883a,
0x8940, //3e
0x8a34, //32

0x8b00, //OUT TH
0x8d24, //21 //22
0x8e61, //41

0x8f63, //
0x9062, //
0x915e, //
0x925a, //56
0x9350, //4c
0x9442, //3e
0x953b, //37
0x9634, //30
0x972d, //2c
0x982b, //2a
0x9929, //28
0x9a27, //26
0x9b0b, //

///////////////////////////// Page 48	- MIPI		////
0x0348,

0x1005,
0x1100,
0x1200,

0x16c4,
0x1700,
0x1900,
0x1a06,
0x1c02,
0x1d04,
0x1e07,
0x1f04,
0x2000,
0x21b8,
0x2200,
0x2301,

0x3005,
0x3100,
0x3206,
0x3401,
0x3502,
0x3601,
0x3703,
0x3800,
0x394a,
0x3c00,
0x3dfa,
0x3f10,
0x4000,
0x4120,
0x4200,

0x0322,
0x10fb,

0x0320,
0x109c,

0x0300,
0x1194,
0x0170,
};

static const u16 sr030pc50_update_preview_setting[] = {
	0x0300,
	0x1190,
};

static const u16 sr030pc50_snapshot[] = {
	0x0300,
	0x1190, /*B[0]_horizontal flip funtion(0:off,1:on)*/
};

static const u16 sr030pc50_snapshot_X_Flip[] = {
	0x0300,
	0x1191, /*B[0]_horizontal flip funtion(0:off,1:on)*/
};

static const u16 sr030pc50_snapshot_Y_Flip[] = {
	0x0300,
	0x1192, /*B[1]_vertical flip funtion(0:off,1:on)*/
};

static const u16 sr030pc50_brightness_m_4[] =
{
0x0310,
0x40d0,
};

static const u16 sr030pc50_brightness_m_3[] =
{
0x0310,
0x40B0,
};

static const u16 sr030pc50_brightness_m_2[] =
{
0x0310,
0x40A0,
};

static const u16 sr030pc50_brightness_m_1[] =
{
0x0310,
0x4090,

};

static const u16 sr030pc50_brightness_0[] =
{
0x0310,
0x4080,
};

static const u16 sr030pc50_brightness_p_1[] =
{
0x0310,
0x4010,
};

static const u16 sr030pc50_brightness_p_2[] =
{
0x0310,
0x4020,
};

static const u16 sr030pc50_brightness_p_3[] =
{
0x0310,
0x4030,
};

static const u16 sr030pc50_brightness_p_4[] =
{
0x0310,
0x4050,
};

static const u16 sr030pc50_VT_brightness_m_4[] = {
0x0310,
0x40d0,
};

static const u16 sr030pc50_VT_brightness_m_3[] =
{
0x0310,
0x40B0,
};

static const u16 sr030pc50_VT_brightness_m_2[] =
{
0x0310,
0x40A0,
};

static const u16 sr030pc50_VT_brightness_m_1[] =
{
0x0310,
0x4090,
};

static const u16 sr030pc50_VT_brightness_0[] =
{
0x0310,
0x4080,
};

static const u16 sr030pc50_VT_brightness_p_1[] =
{
0x0310,
0x4010,
};

static const u16 sr030pc50_VT_brightness_p_2[] =
{
0x0310,
0x4020,
};

static const u16 sr030pc50_VT_brightness_p_3[] =
{
0x0310,
0x4030,
};

static const u16 sr030pc50_VT_brightness_p_4[] =
{
0x0310,
0x4050,
};

//Effect
static const u16 sr030pc50_Effect_Normal[] =
{
0x0310,
0x1103,
0x1230,
0x0313,
0x103b,
0x2002,
};

static const u16 sr030pc50_Effect_Negative[] =
{
0x0310,
0x1103,
0x1238,
0x0313,
0x103b,
0x2002,
};

static const u16 sr030pc50_Effect_Gray[] =
{
0x0310,
0x1103,
0x1233,
0x4480,
0x4580,
0x0313,
0x103b,
0x2002,
};

static const u16 sr030pc50_Effect_Sepia[] =
{
0x0310,
0x1103,
0x1233,
0x4470,
0x4598,
0x0313,
0x103b,
0x2002,
};

static const u16 sr030pc50_Effect_Aqua[] =
{
0x0310,
0x1103,
0x1233,
0x44b0,
0x4540,
0x0313,
0x103b,
0x2002,
};

//WhiteBalance
static const u16 sr030pc50_WB_Auto[] = 
{
0x0322,
0x10e2,
0x112e,
0x8038,
0x8120,
0x8238,
0x835a, //RMAX 5a
0x8422, //RMIN 23
0x8556, //BMAX 5a
0x8624, //BMIN 
};

static const u16 sr030pc50_WB_Daylight[] = 
{
0x0322,
0x107b,
0x1126,
0x8052, 
0x8120, 
0x8230, 
0x8353, 
0x8448, 
0x8535, 
0x862b, 
0x10fb,
0xffff,
};

static const u16 sr030pc50_WB_Cloudy[] = 
{
0x0322,
0x107b,
0x1126,
0x8052,
0x8120,
0x8230,
0x837c, //7f 7d
0x847a, //7d 7d 7f RMIN
0x8521, //1c 1e 1a 21 BMAX
0x861d, //10 1e 
0x10fb,
};

static const u16 sr030pc50_WB_Fluorescent[] = 
{
0x0322,
0x107b,
0x1126,
0x8042,
0x8120,
0x8251,
0x834a, //4c 4e RMAX
0x843a, //40
0x8555, //58
0x8645, //48 4a BMIN
0x10fb,
};

static const u16 sr030pc50_WB_Incandescent[] = 
{
0x0322,
0x107b,
0x1126,
0x8020, 
0x8120, 
0x8257, 
0x8321, 
0x841d, 
0x8559, 
0x8656, 
0x10fb,
0xffff,
};

static const u16 sr030pc50_iso_auto[] = {
	0xff00,
};
static const u16 sr030pc50_iso_50[] = {
	0xff00,
};
static const u16 sr030pc50_iso_100[] = {
	0xff00,
};
static const u16 sr030pc50_iso_200[] = {
	0xff00,
};
static const u16 sr030pc50_iso_400[] = {
	0xff00,
};

static const u16 sr030pc50_1429_fps[] =
{
0x0300,
0x0171,
0x1194,
0x1488,

0x4000, //Hblank 144
0x4190,
0x4200, //Vblank 20
0x4314,

0x9006, //BLC_TIME_TH_ON
0x9106, //BLC_TIME_TH_OFF
0x9288, //BLC_AG_TH_ON
0x9380, //BLC_AG_TH_OFF

0x0320, //Page 20
0x101c,

0x2a90,
0x2bf5,
0x30f8,

0x8300, //EXP Normal 33.33 fps
0x84af,
0x85c8,

0xa001, //EXP Max 16.67 fps
0xa15f,
0xa290,

0x9101, //EXP Fix 14.29 fps
0x929a,
0x9328,

0x109c,
0x0300,
0x0170,

0xff0a,//100ms delay
};

static const u16 sr030pc50_15_fps[] =
{
0x0300,
0x0171,
0x1194,
0x1488,

0x4000, //Hblank 144
0x4190, 
0x4200, //Vblank 20
0x4314, 

0x9003, //BLC_TIME_TH_ON
0x9103, //BLC_TIME_TH_OFF 
0x9288, //BLC_AG_TH_ON
0x9380, //BLC_AG_TH_OFF

0x0320, //Page 20
0x101c,

0x2a90, 
0x2bf5, 
0x30f8,

0x8300, /*EXP Normal 33.33 fps*/
0x84af, 
0x85c8, 

0xa000, /*EXP Max(100Hz) 33.33 fps*/
0xa1af,
0xa2c8,

0x9100, /*EXP Fix 25.00 fps*/
0x92ea,
0x9360,

0x109c,
0x0300,
0x0170,

0xff0a,//100ms delay
};


static const u16 sr030pc50_20_fps[] =
{
0x0300,
0x0171,
0x1194,
0x1488,

0x4000, //Hblank 144
0x4190,
0x4200, //Vblank 20
0x4314,

0x9004, //BLC_TIME_TH_ON
0x9104, //BLC_TIME_TH_OFF
0x9288, //BLC_AG_TH_ON
0x9380, //BLC_AG_TH_OFF

0x0320, //Page 20
0x101c,

0x2a90,
0x2bf5,
0x30f8,

0x8300, /*EXP Normal 33.33 fps */
0x84af,
0x85c8,

0xa000, /*EXP Max(100Hz) 25.00 fps */
0xa1ea,
0xa260,

0x9101, /*EXP Fix 20.00 fps*/
0x9224,
0x93f8,

0x109c,
0x0300,
0x0170,

0xff0a,//100ms delay
};

static const u16 sr030pc50_30_fps[] = {
0x0300,
0x0171,
0x1194,
0x1488,

0x4000, /*Hblank 144*/
0x4190,
0x4200, /*Vblank 20*/
0x4314,

0x9003, /*BLC_TIME_TH_ON*/
0x9103, /*BLC_TIME_TH_OFF*/
0x9288, /*BLC_AG_TH_ON*/
0x9380, /*BLC_AG_TH_OFF*/

0x0320, /*Page 20*/
0x101c,

0x2a90,
0x2bf5,
0x30f8,

0x8300, /*EXP Normal 33.33 fps*/
0x84af,
0x85c8,

0xa000, /*EXP Max(100Hz) 33.33 fps*/
0xa1af,
0xa2c8,

0x9100, /*EXP Fix 25.00 fps*/
0x92ea,
0x9360,

0x109c,
0x0300,
0x0170,

0xff0a, /*100ms delay*/
};

static const u16 sr030pc50_dtp_on[] = 
{
0x0300,
0x5005,
0x8000,

0x0310,
0x1200,

0x0311,
0x1020,

0x0312,
0x40e8,
0x701e,

0x0313,
0x1000,
0x8002,

0x0314,
0x1000,

0x0315,
0x1002,

0x0316,
0x1000,

0x0320,
0x101c,

0x0322,
0x107b,
};


static const u16 sr030pc50_dtp_off[] = 
{
0x0300,
0x5000, //Test Pattern
0x8008,

0x0310,
0x1230,

0x0311,
0x1008,

0x0312,
0x4025,
0x70eb,

0x0313,
0x1001,
0x8003,

0x0314,
0x1001,

0x0315,
0x1003,

0x0316,
0x1001,

0x0320,
0x109c,

0x0322,
0x10fb,
};

static const u16 sr030pc50_init_reg_60hz[] =
{
0x0171,	// reset op.
0x0173,
0x0171,

// PLL Setting 20120327 final
0x0300,

0x080f, //Parallel NO Output_PAD Out
0x1000,
0x1190,
0x1200,
0x1488,

0xc095,
0xc118,
0xc291,
0xc300,
0xc401,

0x0320, //page 20
0x100c, //ae off
0x0322, //page 22
0x107b, //awb off

0x0300,
0x1200,
0x2000,
0x2104,
0x2200,
0x2304,

0x4000, //Hblank 144
0x4190,
0x4200, //Vblank 128
0x4380,

//BLC
0x802e, //don't touch
0x817e, //don't touch
0x8290, //don't touch
0x8330, //don't touch
0x842c, //don't touch
0x854b, //don't touch
0x8601, //don't touch
0x8847, //don't touch

0x900f, //BLC_TIME_TH_ON
0x910f, //BLC_TIME_TH_OFF
0x9288, //BLC_AG_TH_ON
0x9380, //BLC_AG_TH_OFF

0x9838, //don't touch
0x9940, //Out BLC
0xa040, //Dark BLC
0xa844, //Normal BLC

//Page 2  Last Update 10_03_12
0x0302,
0x1000,
0x1100,
0x1340,
0x1404,
0x181c,
0x1900, //01
0x1a00,
0x1b08,
0x1c9c,
0x1d03,
0x2033,
0x2177,
0x22a7,
0x2332,
0x2433,
0x2b40,
0x2d32,
0x3199,
0x3200,
0x3300,
0x343c,
0x350d,
0x3b60, //80

//timing control 1 // //don't touch
0x5021,
0x511c,
0x52aa,
0x535a,
0x5430,
0x5510,
0x560c,
0x5800,
0x590f,

//timing control 2 // //don't touch
0x6034,
0x613a,
0x6234,
0x6339,
0x6434,
0x6539,
0x7235,
0x7338,
0x7435,
0x7538,
0x8002,
0x812e,
0x820d,
0x8310,
0x840d,
0x8510,
0x921d,
0x9320,
0x941d,
0x9520,
0xa003,
0xa12d,
0xa42d,
0xa503,
0xa812,
0xa91b,
0xaa22,
0xab2b,
0xac10,
0xad0e,
0xb833,
0xb935,
0xbc0c,
0xbd0e,
0xc03a,
0xc13f,
0xc23a,
0xc33f,
0xc43a,
0xc53e,
0xc63a,
0xc73e,
0xc83a,
0xc93e,
0xca3a,
0xcb3e,
0xcc3b,
0xcd3d,
0xce3b,
0xcf3d,
0xd033,
0xd13f,

//Page 10
0x0310,
0x1003, //03, //ISPCTL1, YUV ORDER(FIX)
0x1143,
0x1230, //Y offet, dy offseet enable
0x4080,
0x4102, //00 DYOFS  00->10  _100318
0x4885, //Contrast  88->84  _100318
0x5048, //AGBRT

0x6001, //7f //7c
0x6100, //Use default
0x6280, //SATB  (1.4x)
0x6380, //SATR  (1.2x)
0x6448, //AGSAT
0x6690, //wht_th2
0x6736, //wht_gain  Dark (0.4x), Normal (0.75x)

0x8000,
//Page 11
//LPF
0x0311,
0x1025,
0x1107,
0x2000,
0x2160,
0x230a,
0x6013,
0x6185,
0x6200,
0x6300,
0x6400,

0x6770,
0x6824,
0x6904,

//Page 12
//2D
0x0312,
0x40d3,
0x4109,
0x5018,
0x5124,
0x701f,
0x7100,
0x7200,
0x7300,
0x7412,
0x7512,
0x7620,
0x7780,
0x7888,
0x7918,

///////////////////////
0x903d,
0x9134,
0x9928,
0x9c05, //14 For defect
0x9d08, //15 For defect
0x9e28,
0x9f28,

0xb07d, //75 White Defect
0xb544,
0xb682,
0xb752,
0xb844,
0xb915,
///////////////////////

//Edge
0x0313,
0x1001,
0x1189,
0x1214,
0x1319,
0x1408,
0x2003,
0x2104,
0x2325,
0x2421,
0x2508,
0x2640,
0x2700,
0x2808,
0x2950,
0x2ae0,
0x2b10,
0x2c28,
0x2d40,
0x2e00,
0x2f00,
0x3011,
0x8005,
0x8107,
0x9004,
0x9105,
0x9200,
0x9330,
0x9430,
0x9510,

//14page LSC 20120214 //////////
0x0314,
0x1001,

0x2244, //69,76, 34, 2b
0x2334, //50,4b, 15, 0d
0x2432, //44,3b, 10, 0b

0x2780, /* RXCEN */
0x2880, //RYCEN
0x2980, /* GXCEN */
0x2a80, //GYCEN
0x2b80, /* BXCEN */
0x2c80, //BYCEN


//15page//////////////////////////
0x0315,
0x1003,

0x1452,
0x163a,
0x172f,

//CMC
0x30f1,
0x3171,
0x3200,
0x331f,
0x34e1,
0x3542,
0x3601,
0x3731,
0x3872,

//CMC OFS
0x4090,
0x4182,
0x4212,
0x4386,
0x4492,
0x4518,
0x4684,
0x4702,
0x4802,

0x0316,
0x3000,
0x310d,
0x321b,
0x332d,
0x344e,
0x356f,
0x3686,
0x379d,
0x38af,
0x39c0,
0x3acf,
0x3be2,
0x3cf0,
0x3df9,
0x3eff,

//Page 17 AE
0x0317,
0xc43c,
0xc532,

//Page 20 AE
0x0320,
0x100c,
0x1104,

0x2001,
0x2827,
0x29a1,

0x2af0,
0x2bf4,
0x2c2b, //23->2b 2010_04_06 hhzin

0x30f8,

0x3b22,
0x3cde,

0x3922,
0x3ade,
0x3b22, //23->22 _10_04_06 hhzin
0x3cde,

0x6071, //d5, 99
0x6100,

0x6271,
0x6300,

0x6830,
0x696a,
0x6A27,
0x6Bbb,

0x7034,//Y Targe 32

0x7611, //Unlock bnd1
0x7772, //Unlock bnd2 02->a2 _10_04_06 hhzin

0x7812, //Yth 1
0x7926, //Yth 2 26->27 _10_04_06 hhzin
0x7a23, //Yth 3

0x7c17, //1c->1d _10_04_06 hhzin
0x7d22,

0x8300, //EXP Normal 30.00 fps
0x84c3,
0x8550,

0x8600, //EXPMin 7500.00 fps
0x87c8,

0x8802, //EXP Max 8.00 fps
0x89dc,
0x8a6c,

0x8B3a, //EXP100
0x8C98,
0x8D30, //EXP120
0x8Ed4,

0x988C,
0x9923,

0x9c07, //EXP Limit 833.33 fps
0x9d08,
0x9e00, //EXP Unit
0x9fc8,

0xb01d,
0xb114,
0xb290,
0xb317,
0xb417,
0xb53e,
0xb62b,
0xb724,
0xb821,
0xb91f,
0xba1e,
0xbb1d,
0xbc1c,
0xbd1b,

0xc01a,
0xc348,
0xc448,

//Page 22 AWB
0x0322,
0x10e2,
0x112e,
0x2041,
0x2140,
0x24fe,

0x3080,
0x3180, //7f
0x3812,
0x3933,
0x40f3, //f0
0x4154,
0x4233,
0x43f3,
0x4444,
0x4566,
0x4608,
0x4763,

0x803d,
0x8120,
0x8240,

0x835a, //RMAX 5a
0x8422, //RMIN 23
0x8556, //BMAX 5a
0x8624, //BMIN

0x8748, //42
0x883a,
0x893e,
0x8a34,

0x8b00, //OUT TH
0x8d24, //21
0x8e61, //41

0x8f63,
0x9062, //60 //62
0x915e, //5c //5e
0x925a, //
0x9350,//52 //50
0x9442,//48 //46
0x953b, //36 //3c
0x9634, //31 //31
0x972d,
0x982b,
0x9929, //29
0x9a27,
0x9b0b,
0xb4bf,

///////////////////////////// Page 48	- MIPI		////
0x0348,

0x1005,
0x1100,
0x1200,

0x16c4,
0x1700,
0x1900,
0x1a06,
0x1c02,
0x1d04,
0x1e07,
0x1f04,
0x2000,
0x21b8,
0x2200,
0x2301,

0x3005,
0x3100,
0x3206,
0x3401,
0x3502,
0x3601,
0x3703,
0x3800,
0x394a,
0x3c00,
0x3dfa,
0x3f10,
0x4000,
0x4120,
0x4200,

//  0x5081,

0x0322,
0x10fb,

0x0320,
0x108c,

0x0170,

};

static const u16 sr030pc50_VT_init_reg_60hz[] =
{
0x0171,	// reset op.
0x0173,
0x0171,

// PLL Setting
0x0300,

0x080f, //Parallel NO Output_PAD Out
0x1000,	// VDOCTL1
0x1190,	// VDOCTL2 , 90 : FFR off, 94 : FFR on
0x1200,	// CLK_CTL
0x1488,

0xc095,
0xc118,
0xc291,
0xc300,
0xc401,

0x0320, //page 20
0x100c, //ae off
0x0322, //page 22
0x107b, //awb off

0x0300,
0x1200,
0x2000,
0x2104,
0x2200,
0x2304,

0x4000, //Hblank 144
0x4190,
0x4200, //Vblank 20
0x4314,

//BLC
0x802e, //don't touch
0x817e, //don't touch
0x8290, //don't touch
0x8330, //don't touch
0x842c, //don't touch
0x854b, //don't touch
0x8601, //don't touch
0x8847, //don't touch
//{0x89, 0x48},//BLC hold

0x9007,//TIME_IN  12/100  _100318
0x9107,//TIME_OUT 12/100  _100318
0x9298,//AG_IN
0x9390,//AG_OUT

0x9838, //don't touch
0x9940, //Out BLC
0xa040, //Dark BLC
0xa842, //Normal BLC 44

//Page2 Last Update 12_01_20
0x0302,
0x1000,
0x1100,
0x1340,
0x1404,
0x181c,
0x1900, //01
0x1a00,
0x1b08,
0x1c9c,
0x1d03,
0x2033,
0x2177,
0x22a7,
0x2332,
0x2433,
0x2b40,
0x2d32,
0x3199,
0x3200,
0x3300,
0x343c,
0x350d,
0x3b60, //80

//timing control 1 // //don't touch
0x5021,
0x511c,
0x52aa,
0x535a,
0x5430,
0x5510,
0x560c,
0x5800,
0x590f,

//timing control 2 // //don't touch
0x6034,
0x613a,
0x6234,
0x6339,
0x6434,
0x6539,
0x7235,
0x7338,
0x7435,
0x7538,
0x8002,
0x812e,
0x820d,
0x8310,
0x840d,
0x8510,
0x921d,
0x9320,
0x941d,
0x9520,
0xa003,
0xa12d,
0xa42d,
0xa503,
0xa812,
0xa91b,
0xaa22,
0xab2b,
0xac10,
0xad0e,
0xb833,
0xb935,
0xbc0c,
0xbd0e,
0xc03a,
0xc13f,
0xc23a,
0xc33f,
0xc43a,
0xc53e,
0xc63a,
0xc73e,
0xc83a,
0xc93e,
0xca3a,
0xcb3e,
0xcc3b,
0xcd3d,
0xce3b,
0xcf3d,
0xd033,
0xd13f,

//Page 10
0x0310,
0x1003, //03, //ISPCTL1, YUV ORDER(FIX)
0x1143,
0x1230, //Y offet, dy offseet enable
0x4080,
0x4102, //00 DYOFS  00->10  _100318
0x4880, //Contrast  88->84  _100318
0x5048, //AGBRT

0x6001, //7f //7c
0x6100, //Use default
0x6278, //SATB_B  (1.4x)
0x6378, //SATR_R  (1.2x) //78
0x6448, //AGSAT
0x6690, //wht_th2
0x6736, //wht_gain  Dark (0.4x), Normal (0.75x)

0x8000,

//Page 11
//LPF
0x0311,
0x1025,	//LPF_CTL1 //0x01
0x1107,	//06
0x2000,	//LPF_AUTO_CTL
0x2160,	//LPF_PGA_TH
0x230a,	//LPF_TIME_TH
0x6013,	//ZARA_SIGMA_TH //40->10
0x6185,
0x6200,	//ZARA_HLVL_CTL
0x6300,	//ZARA_LLVL_CTL
0x6400,	//ZARA_DY_CTL

0x6770,	//Dark //f0
0x6824,	//Middle //04 //34
0x6904,	//High //04

//Page 12
//2D
0x0312,
0x40d3,	//YC2D_LPF_CTL1 //bc
0x4109,	//YC2D_LPF_CTL2
0x5018,	//Test Setting
0x5124,	//Test Setting
0x701f,	//GBGR_CTL1 //0x1f
0x7100,	//Test Setting
0x7200,	//Test Setting
0x7300,	//Test Setting
0x7412,	//GBGR_G_UNIT_TH//12
0x7512,	//GBGR_RB_UNIT_TH//12
0x7620,	//GBGR_EDGE_TH
0x7780,	//GBGR_HLVL_TH
0x7888,	//GBGR_HLVL_COMP
0x7918,	//Test Setting

//////////////////
0x903d,
0x9134,
0x9928,
0x9c05, //14 For defect
0x9d08, //15 For defect
0x9e28,
0x9f28,

0xb07d, //75 White Defect
0xb544,
0xb682,
0xb752,
0xb844,
0xb915,
///////////////////////

//Edge
0x0313,
0x1001,
0x1189,
0x1214,
0x1319,
0x1408,	//Test Setting
0x2003,	//SHARP_Negative
0x2104,	//SHARP_Positive
0x2325,	//SHARP_DY_CTL
0x2421,	//40->33
0x2508,	//SHARP_PGA_TH
0x2640,	//Test Setting
0x2700,	//Test Setting
0x2808,	//Test Setting
0x2950,	//AG_TH
0x2ae0,	//region ratio
0x2b10,	//Test Setting
0x2c28,	//Test Setting
0x2d40,	//Test Setting
0x2e00,	//Test Setting
0x2f00,	//Test Setting
0x3011,	//Test Setting
0x8005,	//SHARP2D_CTL
0x8107,	//Test Setting
0x9004,	//SHARP2D_SLOPE
0x9105,	//SHARP2D_DIFF_CTL
0x9200,	//SHARP2D_HI_CLIP
0x9330,	//SHARP2D_DY_CTL
0x9430,	//Test Setting
0x9510,	//Test Setting

//14page LSC 20120214 //////////
0x0314,
0x1001,

0x2244, //69,76, 34, 2b
0x2334, //50,4b, 15, 0d
0x2432, //44,3b, 10, 0b

0x2780, /* RXCEN */
0x2880, //RYCEN
0x2980, /* GXCEN */
0x2a80, //GYCEN
0x2b80, /* BXCEN */
0x2c80, //BYCEN


//15page//////////////////////////
0x0315,
0x1003,

0x1448,	//CMCOFSGM
0x163e,	//CMCOFSGL
0x172d,	//CMC SIGN

//CMC
0x30cb,
0x314b,
0x3200,
0x3323,
0x34ce,
0x352b,
0x3600,
0x3735,
0x3875,


//CMC OFS
0x4000,
0x4100,
0x4200,
0x430e,
0x448b,
0x4583,
0x4600,
0x4700,
0x4800,

0x0316,//gamma   0.44 //S_32
0x3000,
0x3108,//0x0d //0e
0x321c,//(0216_kjh_0x1b-->1c) 0x18 //1a
0x332f,//0x2c //2f
0x3453,
0x3576,
0x3693,
0x37ac,
0x38c0,
0x39d0,
0x3adc,
0x3bed,
0x3cf4, //f7
0x3df6, //fc
0x3efa, //ff

//Page 17 AE
0x0317,
0xc43c,
0xc532,

//Page 20 AE
0x0320,
0x100c,
0x1104,

0x2001,
0x2827,
0x29a1,

0x2a90,
0x2bf5,
0x2c2b, //23->2b 2010_04_06 hhzin

0x30f8,

0x3b22,
0x3cde,

0x3922,
0x3ade,
0x3b22, //23->22 _10_04_06 hhzin
0x3cde,

0x6070, //70
0x6112, //11 //22

0x6270,
0x6320, //11 //22

0x683c,
0x6964,
0x6A28,
0x6Bc8,

0x7034,//Y Targe 32

0x7611, //Unlock bnd1
0x7772, //Unlock bnd2 02->a2 _10_04_06 hhzin

0x7812, //Yth 1
0x7926, //Yth 2 //1f
0x7a23, //Yth 3

0x7c17, //1c->1d _10_04_06 hhzin
0x7d22,

//50Hz
0x8300, //EXP Normal 30.00 fps
0x84c3,
0x8550,

0x8600, //EXPMin 7500.00 fps
0x87c8,

0x8801, //EXP Max 17.14 fps
0x8955,
0x8acc,

0x8B3a, //EXP100
0x8C98,
0x8D30, //EXP120
0x8Ed4,

0x9101, //EXP Fix 15.00 fps
0x9286,
0x93a0,

0x988C, //Outdoor th1
0x9923, //Outdoor th2

0x9c07, //EXP Limit 833.33 fps
0x9d08,
0x9e00, //EXP Unit
0x9fc8,

0xb01d,
0xb114, //14
0xb2a0, //80 //90
0xb317, //AGLVL //17
0xb417,
0xb53e,
0xb62b,
0xb724,
0xb821,
0xb91f,
0xba1e,
0xbb1d,
0xbc1c,
0xbd1b,

0xc01a,
0xc348,
0xc448,

//Page 22 AWB
0x0322,
0x10e2,
0x112e, //2e
0x2041, //01 //69
0x2140,

0x3080, //Cb
0x3180, //Cr
0x3812, //Lock Boundary //13
0x3933,
0x40f3, //f0
0x4133, //32
0x4222,
0x43f3,
0x4488, //
0x4566, //
0x4608, //02

0x803d, //3a //3c
0x8120,
0x8240, //3a

//Cb_7b, Cr_85 祁
0x835a, //RMAX
0x8422, //(0216_kjh20>>23) RMIN
0x8556, //(0216_kjh5c>>5a) BMAX //51
0x8624, //BMIN //20

0x874a,
0x883a,
0x8940, //3e
0x8a34, //32

0x8b00, //OUT TH
0x8d24, //21 //22
0x8e61, //41

0x8f63, //
0x9062, //
0x915e, //
0x925a, //56
0x9350, //4c
0x9442, //3e
0x953b, //37
0x9634, //30
0x972d, //2c
0x982b, //2a
0x9929, //28
0x9a27, //26
0x9b0b, //

///////////////////////////// Page 48	- MIPI		////
0x0348,

0x1005,
0x1100,
0x1200,

0x16c4,
0x1700,
0x1900,
0x1a06,
0x1c02,
0x1d04,
0x1e07,
0x1f04,
0x2000,
0x21b8,
0x2200,
0x2301,

0x3005,
0x3100,
0x3206,
0x3401,
0x3502,
0x3601,
0x3703,
0x3800,
0x394a,
0x3c00,
0x3dfa,
0x3f10,
0x4000,
0x4120,
0x4200,

0x0322,
0x10fb,

0x0320,
0x108c,

0x0300,
0x1194,
0x0170,
};

static const u16 sr030pc50_1429_fps_60hz[] =
{
0x0300,
0x0171,
0x1194,
0x1488,

0x4000, //Hblank 144
0x4190,
0x4200, //Vblank 20
0x4314,

0x9007, //BLC_TIME_TH_ON
0x9107, //BLC_TIME_TH_OFF
0x9288, //BLC_AG_TH_ON
0x9380, //BLC_AG_TH_OFF

0x0320, //Page 20
0x100c,

0x2a90,
0x2bf5,
0x30f8,

0x8300, //EXP Normal 30.00 fps
0x84c3,
0x8550,

0x8801, /*EXP Max 17.14 fps*/
0x8955,
0x8acc,

0x9101, //EXP Fix 15.00 fps
0x9286,
0x93a0,

0x108c,
0x0300,
0x0170,

0xff0a,//100ms delay
};

static const u16 sr030pc50_15_fps_60hz[] =
{
0x0300,
0x0171,
0x1194,
0x1488,

0x4000, //Hblank 144
0x4190,
0x4200, //Vblank 20
0x4314,

0x9004, //BLC_TIME_TH_ON
0x9104, //BLC_TIME_TH_OFF
0x9288, //BLC_AG_TH_ON
0x9380, //BLC_AG_TH_OFF

0x0320, //Page 20
0x100c,

0x2a90,
0x2bf5,
0x30f8,

0x8300, //EXP Normal 30.00 fps
0x84c3,
0x8550,

0x8800, /*EXP Max(120Hz) 30.00 fps*/
0x89c3,
0x8a50,

0x9100, /*EXP Fix 24.00 fps*/
0x92f4,
0x9324,

0x108c,
0x0300,
0x0170,

0xff0a,//100ms delay
};


static const u16 sr030pc50_20_fps_60hz[] =
{
0x0300,
0x0171,
0x1194,
0x1488,

0x4000, //Hblank 144
0x4190,
0x4200, //Vblank 20
0x4314,

0x9005, //BLC_TIME_TH_ON
0x9105, //BLC_TIME_TH_OFF
0x9288, //BLC_AG_TH_ON
0x9380, //BLC_AG_TH_OFF

0x0320, //Page 20
0x100c,

0x2a90,
0x2bf5,
0x30f8,

0x8300, //EXP Normal 30.00 fps
0x84c3,
0x8550,

0x8800, /*EXP Max(120Hz) 24.00 fps*/
0x89f4,
0x8a24,

0x9101, //EXP Fix 20.00 fps
0x9224,
0x93f8,

0x108c,
0x0300,
0x0170,

0xff0a,//100ms delay
};

static const u16 sr030pc50_30_fps_60hz[] = {
0x0300,
0x0171,
0x1194,
0x1488,

0x4000, /*Hblank 144*/
0x4190,
0x4200, /*Vblank 2*/
0x4302,

0x9003, /*BLC_TIME_TH_ON*/
0x9103, /*BLC_TIME_TH_OFF*/
0x9288, /*BLC_AG_TH_ON*/
0x9380, /*BLC_AG_TH_OFF*/

0x0320, /*Page 20*/
0x100c,

0x2a90,
0x2bf5,
0x30f8,

0x8300, /*EXP Normal 40.00 fps*/
0x8492,
0x857c,

0x8800, /*/EXP Max(120Hz) 40.00 fps*/
0x8992,
0x8a7c,

0x9100, /*EXP Fix 30.00 fps*/
0x92c3,
0x9350,

0x108c,
0x0300,
0x0170,

0xff0a,/*100ms delay*/
};

#endif /* _SR030PC50_REGS_H_ */
